openapi: 3.0.0
info:
  title: Task Management API
  version: 1.0.0
  description: API for managing tasks.

server:
servers:
  - url: http://localhost:3000/api/v1
    description: Development server

paths:
  /signup:
    post:
      summary: Create a new user account.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User created successfully.

  /login:
    post:
      summary: Authenticate a user and return a JWT.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: JWT token issued.

  /tasks:
    get:
      summary: Retrieve a list of tasks.
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, in-progress, completed]
        - name: limit
          in: query
          schema: 
            type: integer
        - name: page
          in: query
          schema:
            type: integer
        - name: sort
          in: query
          schema:
            type: string
            enum: [asc, desc]
      responses:
        '200':
          description: List of tasks.

  /task:
    post:
      summary: Create a new task.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created.

  /tasks/{id}:
    get:
      summary: Retrieve a specific task.
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task details.

    put:
      summary: Update a specific task.
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Task updated.

    delete:
      summary: Delete a specific task.
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Task deleted.

components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string

    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    Task:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        status:
          enum: [pending, in-progress, completed]
          type: string
